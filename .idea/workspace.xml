<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ab0147a0-8c9e-4bf3-919d-d5e69171c328" name="默认更改列表" comment="默认更改列表">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tmp/tmp37-方法使用指针作为接收者的时候.go" beforeDir="false" afterPath="$PROJECT_DIR$/tmp/tmp37-方法使用指针作为接收者的时候.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tmp/tmp38-当函数和方法返回一个指针的时候.go" beforeDir="false" afterPath="$PROJECT_DIR$/tmp/tmp38-当函数和方法返回一个指针的时候.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExportToHTMLSettings">
    <option name="printScope" value="1" />
    <option name="OPEN_IN_BROWSER" value="true" />
    <option name="OUTPUT_DIRECTORY" value="$PROJECT_DIR$/exportToHTML" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.22.1" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;matrix-ops&quot;
  }
}</component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:matrix-ops/LearningGo.git&quot;,
    &quot;accountId&quot;: &quot;f3ffe05c-3a09-4cdb-83ef-767ab0972721&quot;
  }
}</component>
  <component name="GoDepProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
    <option name="useGoPathFromSystemEnvironment" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/../../../../../../../Program Files/Go/src/builtin/builtin.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/../../../../../../../Program Files/Go/src/os/exec/exec.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/tmp/tmp102-goroutine.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="21mcwmkIk5VkUDcSILoVI388wNA" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go 构建.go build 17.5-terraform.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build error接口测试2.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build json_test1.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build pointer.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build structTest.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build switch.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build switch2.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build switch语句fallthrough语句的作用.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp-23.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp-24-指针测试.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp-24.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp100.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp101-goroutine.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp102-goroutine.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp103-地鼠装配流水线.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp104-select语句.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp105-select语句.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp107.go'.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp15-nil指针.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp18-sortSlice.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp19-nil可以当成空切片来使用.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp2-接口.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp20-当需要用nil来表示没有值的情况.md.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp21-io-Readdir.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp22-goroutine启动.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp25-类型断言.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp25.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp26.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp27.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp28.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp29.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp32-在goroutine中使用互斥锁.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp35-chan-struct{}是什么.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp35-在函数内部访问全局变量.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp37-方法使用指针作为接收者的时候.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build tmp38-当函数和方法返回一个指针的时候.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build 指向数组的指针.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build 指向结构的指针.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build 测试如果map超出容量会发生什么.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build 测试如果切片超出容量限制会发生什么.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build 闭包2.go.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.vendoring.notification.had.been.shown&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/zhangweilong&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\zhang\Nutstore\1\我的坚果云\go\src" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tmp" />
      <recent name="$PROJECT_DIR$/tmp/" />
      <recent name="C:\Users\zhang\Nutstore\1\我的坚果云\go\src\" />
      <recent name="C:\Users\zhang\Nutstore\1\我的坚果云\go\src" />
    </key>
  </component>
  <component name="RunManager" selected="Go 构建.go build tmp38-当函数和方法返回一个指针的时候.go">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build tmp103-地鼠装配流水线.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/tmp/tmp103-地鼠装配流水线.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build tmp107.go'.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/tmp/tmp107.go'.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build tmp21-io-Readdir.go" type="GoApplicationRunConfiguration" factoryName="Go Application" singleton="false" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/tmp/tmp21-io-Readdir.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build tmp37-方法使用指针作为接收者的时候.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/tmp/tmp37-方法使用指针作为接收者的时候.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build tmp38-当函数和方法返回一个指针的时候.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/tmp/tmp38-当函数和方法返回一个指针的时候.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go 构建.go build tmp103-地鼠装配流水线.go" />
      <item itemvalue="Go 构建.go build tmp107.go'.go" />
      <item itemvalue="Go 构建.go build tmp21-io-Readdir.go" />
      <item itemvalue="Go 构建.go build tmp37-方法使用指针作为接收者的时候.go" />
      <item itemvalue="Go 构建.go build tmp38-当函数和方法返回一个指针的时候.go" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build tmp38-当函数和方法返回一个指针的时候.go" />
        <item itemvalue="Go 构建.go build tmp21-io-Readdir.go" />
        <item itemvalue="Go 构建.go build tmp37-方法使用指针作为接收者的时候.go" />
        <item itemvalue="Go 构建.go build tmp103-地鼠装配流水线.go" />
        <item itemvalue="Go 构建.go build tmp107.go'.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-b97fc8a1e17c-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.14494.238" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-GO-241.14494.238" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="默认更改列表" />
    <option name="LAST_COMMIT_MESSAGE" value="默认更改列表" />
  </component>
  <component name="VgoProject">
    <environment>
      <map>
        <entry key="GO111MODULE" value="on" />
        <entry key="GOPROXY" value="https://mirrors.aliyun.com/goproxy" />
      </map>
    </environment>
    <settings-migrated>true</settings-migrated>
  </component>
</project>